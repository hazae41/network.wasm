/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_networksecret_free(a: number, b: number): void;
export function networksecret_to_secret(a: number): number;
export function networksecret_to_proof(a: number): number;
export function networksecret_to_value(a: number): number;
export function __wbg_networkmixin_free(a: number, b: number): void;
export function networkmixin_new(a: number, b: number, c: number, d: number): number;
export function networkmixin_generate(a: number, b: number): number;
export function networkmixin_verify_secret(a: number, b: number): number;
export function networkmixin_verify_proof(a: number, b: number): number;
export function keccak256(a: number): number;
export function __wbg_keccak256hasher_free(a: number, b: number): void;
export function keccak256hasher_new(): number;
export function keccak256hasher_clone(a: number): number;
export function keccak256hasher_update(a: number, b: number): void;
export function keccak256hasher_finalize(a: number): number;
export function base16_encode_lower(a: number, b: number): void;
export function base16_encode_upper(a: number, b: number): void;
export function base16_decode_mixed(a: number, b: number, c: number): void;
export function base16_decode_lower(a: number, b: number, c: number): void;
export function base16_decode_upper(a: number, b: number, c: number): void;
export function __wbg_memory_free(a: number, b: number): void;
export function memory_new(a: number, b: number): number;
export function memory_ptr(a: number): number;
export function memory_len(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
